{
    "collab_server" : "",
    "contents" : "#MADELINE M. WARNDORF HON400 THESIS 2018\n#IMPORT DATA:\n# USE importData.R file\n#\n# This is the dataframe pulled from the full dataset from the Excel Sheet. #\n# VARIABLES extracted from Excel Sheet:\n#   for case years 07-09:\n#     casenum, statenum, citynum, countynum, latitude, longitude,\n#     vnumber (vehicle number), vfatcount (vehicle fatal count), accday,\n#     accmon, accyr, accdate, modelyr, make, drf1 (driver related factors),\n#     drf2, drf3, drf4\n#   for case years 10-15:\n#     casenum, statenum, citynum, countynum, latitude, longitude,\n#     vnumber (vehicle number), vfatcount (vehicle fatal count), accday,\n#     accmon, accyr, accdate, modelyr, make, drf1 (driver related factors),\n#     drf2, drf3, drf4, dridistract1, dridistract2\n\n# PACKAGES USED -----------------------------------------------------------\nlibrary(\"stringr\", lib.loc=\"/Library/Frameworks/R.framework/Versions/3.2/Resources/library\")\nlibrary(\"plyr\", lib.loc=\"/Library/Frameworks/R.framework/Versions/3.2/Resources/library\")\nlibrary(\"knitr\", lib.loc=\"/Library/Frameworks/R.framework/Versions/3.2/Resources/library\")\nlibrary(\"gridExtra\", lib.loc=\"/Library/Frameworks/R.framework/Versions/3.2/Resources/library\")\nlibrary(\"png\", lib.loc=\"/Library/Frameworks/R.framework/Versions/3.2/Resources/library\")\nlibrary(\"pander\", lib.loc=\"/Library/Frameworks/R.framework/Versions/3.2/Resources/library\")\nlibrary(\"car\", lib.loc=\"/Library/Frameworks/R.framework/Versions/3.2/Resources/library\")\n\n# SETTING UP DATAFRAME FROM EXCEL DATAFRAME ------------------------------\n# df = FARS_YY dataframe (df) (ex: FARS_07) \n# YYYY = case year of the Excel dataframe (ex: 2007)\nfatal_YYsetup <- function(df, YYYY) {\n  #df = FARS_YY\n  #YYYY = case year\n  y = YYYY\n  if (y >= 2007 & y <= 2009) {\n    fataldf <- as.data.frame(cbind.data.frame(df$icasenum, df$istatenum, df$icity, df$icounty,\n                                              df$latitude, df$longitude, df$ivnumber, df$vfatcount,\n                                              df$iaccday, df$iaccmon, df$iaccyr, df$saccdate, \n                                              df$imodelyr, df$imake, df$idrf1, df$idrf2, \n                                              df$idrf3, df$idrf4), header = TRUE, as.is = TRUE)\n    colnames(fataldf) <- c(\"casenum\", \"statenum\", \"citynum\",\"countynum\",\"lat\",\"long\",\n                           \"vehnum\", \"numfatalveh\", \"day\", \"month\", \"year\",\"date\", \"modelyr\", \"make\",\n                           \"drf1\", \"drf2\", \"drf3\", \"drf4\")\n    #START Getting Date to be a Date\n    fataldf$date <- df$saccdate\n    fataldf$date <-format.POSIXct(fataldf$date, format = \"%m/%Y\")\n    #END\n    #Fixing city and county as num\n    fataldf$citynum <- as.integer(fataldf$citynum)\n    fataldf$countynum <- as.integer(fataldf$countynum)\n    fataldf$lat <- as.character(fataldf$lat)\n    fataldf$long <- as.character(fataldf$long) \n    fataldf <- unique(fataldf)\n  }\n  else {\n    fataldf <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$city, df$county, df$latitude,\n                                              df$longitude, df$vnumber, df$vfatcount, df$accday, df$accmon,\n                                              df$caseyear,df$accdate, df$modelyr, df$make, \n                                              df$dridistract1, df$dridistract2), \n                             header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)\n    colnames(fataldf) <- c(\"casenum\", \"statenum\", \"citynum\", \"countynum\", \"lat\", \"long\",\n                           \"vehnum\", \"numfatalveh\", \"day\", \"month\", \n                           \"year\",\"date\", \"modelyr\", \"make\", \"dridistract1\", \"dridistract2\")\n    #START Getting Date to be a Date\n    fataldf$date <- df$accdate\n    fataldf$date <-format.POSIXct(fataldf$date, format = \"%m/%Y\")\n    #END\n    #Fixing city and county as num\n    fataldf$citynum <- as.integer(fataldf$citynum)\n    fataldf$countynum <- as.integer(fataldf$countynum)\n    fataldf$lat <- as.character(fataldf$lat)\n    fataldf$long <- as.character(fataldf$long)\n    fataldf <- unique(fataldf)\n  }\n  return(fataldf)\n}\n\n## STORE RESULT OF FUNCTION IN MAIN DATA FRAME ##\n#INPUT EXAMPLE:   fatal_07 <- fatal_YYsetup(X2007txtToExcel, 2007) #\nfatal_07 <- fatal_YYsetup(FARS_07, 2007)\nfatal_08 <- fatal_YYsetup(FARS_08, 2008)\nfatal_09 <- fatal_YYsetup(FARS_09, 2009)\nfatal_10 <- fatal_YYsetup(FARS_10, 2010)\nfatal_11 <- fatal_YYsetup(FARS_11, 2011)\nfatal_12 <- fatal_YYsetup(FARS_12, 2012)\nfatal_13 <- fatal_YYsetup(FARS_13, 2013)\nfatal_14 <- fatal_YYsetup(FARS_14, 2014)\nfatal_15 <- fatal_YYsetup(FARS_15, 2015)\n\n\n# MAKING UNIQUE DF AND FINDING CELL CASES ---------------------------------\n#Function for making unique dataframe based on case number and state number\n#INPUT: df = fatal_YY\n#OUTPUT: unique data frame by case number and state number\nmakingUniqueCases <- function(df) {\n  #df = casedf\n  ndf <- df\n  ndf$duplicate <- \"no\"\n  lengthcases <- length(df$casenum)\n  rownames(df) <- c(1:length(df$casenum))\n  i = 1\n  for (w in 1:lengthcases) {\n    testrow <- ndf[i,]\n    if (w != i){\n      comparerow <- df[w,]\n      if (testrow[1,1] == comparerow[1,1]) {\n        if(testrow[1,2] == comparerow[1,2]){\n          ndf[i,]$duplicate <- \"yes\"\n        } else {\n          ndf[i,]$duplicate <- \"no\"\n        }\n      } else {\n        ndf[i,]$duplicate <- \"no\"\n      }\n    } else {\n      next\n    }\n    i = i + 1\n  } #close for loop\n  ndf <- ndf[ndf$duplicate != \"yes\",]\n  return(ndf)\n}\n\n#Function for returning distracted driving subdataframe\n#INPUT: df = fatal_YY YY = case year\n#OUTPUT: fataldisdf\nfindingCellCases <- function(df, YY) {\n  #df = fatal_YY\n  #YY = case year\n  if (YY >= 07 & YY <= 09) {\n    setupfataldis0709 <- function(df) {\n      #df = fatal_YY\n      fataldisYY <- df\n      setupdrf <- function(fataldisYY){\n        ndf <- fataldisYY\n        ndf$drf <- ifelse(ndf$drf1 == 93, 93, \n                          ifelse(ndf$drf2 == 93, 93, \n                                 ifelse(ndf$drf3 == 93, 93,\n                                        ifelse(ndf$drf4 == 93, 93,\n                                               ifelse(ndf$drf1 == 94, 94,\n                                                      ifelse(ndf$drf2 == 94, 94,\n                                                             ifelse(ndf$drf3 == 94, 94,\n                                                                    ifelse(ndf$drf4 == 94, 94, 0)))))))) \n        #93 = cellular telephone present in vehicle\n        #94 = cellular telephone in use in vehicle\n        \n        drop <- c(\"citynum\",\"countynum\",\"lat\",\"long\",\"day\",\"month\",\"date\",\"drf1\", \"drf2\", \"drf3\", \"drf4\")\n        ndf = ndf[,!(names(ndf) %in% drop)]\n        return(ndf)\n      }\n      fataldisYY <- setupdrf(fataldisYY)\n      return(fataldisYY)\n    } \n    fataldisYY <- setupfataldis0709(df) }\n  else {\n    setupfataldis1015 <- function(df) {\n      setupdrf <- function(df){\n        df$drf <- ifelse(df$dridistract1 == 5, 5,\n                         ifelse(df$dridistract2 == 5, 5,\n                                ifelse(df$dridistract1 == 6, 6,\n                                       ifelse(df$dridistract2 == 6, 6, \n                                              ifelse(df$dridistract1 == 15, 15,\n                                                     ifelse(df$dridistract2 == 15, 15, 0))))))\n        #5 = Talking or listening to cell phone\n        #6 = While dialing Cell phone\n        #15 = Other cell phone distraction\n        drop <- c(\"citynum\",\"countynum\",\"lat\",\"long\",\"day\",\"month\",\"date\",\"dridistract1\", \"dridistract2\")\n        df = df[,!(names(df) %in% drop)]\n        return(df)\n      }\n      fataldisYY <- setupdrf(df)\n      return(fataldisYY)\n    }\n    fataldisYY <- setupfataldis1015(df)\n  }\n  return(fataldisYY)\n}\n\n\ntableToCSV(combinedMYdf)\n\nfatal_07 <- findingCellCases(fatal_07, 07)\nfatal_08 <- findingCellCases(fatal_08, 08)\nfatal_09 <- findingCellCases(fatal_09, 09)\nfatal_10 <- findingCellCases(fatal_10, 10)\nfatal_11 <- findingCellCases(fatal_11, 11)\nfatal_12 <- findingCellCases(fatal_12, 12)\nfatal_13 <- findingCellCases(fatal_13, 13)\nfatal_14 <- findingCellCases(fatal_14, 14)\nfatal_15 <- findingCellCases(fatal_15, 15)\n# FINDING NUM OF CASES and NUM OF DISTRACTED ------------------------------\n#counting total number of cases in the calendar year by model year\n#INPUT: df = fatal_YY \n#OUTPUT: data frame of number of total cases by model year\ncountOfCasesByMY <- function(df) {\n  #df = fatal_YY\n  dfs <- df\n  modelyearList <- unique(dfs$modelyr)\n  modelYear = numeric()\n  totalCases = numeric()\n  listcount <- 1\n  for(i in modelyearList){\n    modelYear[listcount] <- i\n    addingToTable <- function(i){\n      dfn <- dfs\n      dfn$modelyrP <- ifelse(df$modelyr == i, 1, 0)\n      dfn <- dfn[dfn$modelyrP != 0, ]\n      dft <- as.data.frame(cbind.data.frame(dfn$casenum, dfn$statenum), \n                           header = TRUE, as.is = TRUE)\n      colnames(dft) <- c(\"casenum\", \"statenum\")\n      dft <- unique(dft)\n      dft <- makingUniqueCases(dft)\n      casetotalsum <- 0\n      x <- count(dft)\n      casetotalsum <- sum(x$freq)\n      return(casetotalsum)\n    }\n    totalCases[listcount] <- addingToTable(i)\n    listcount = listcount + 1\n  }\n  dfmy <- data.frame(modelYear,totalCases, stringsAsFactors = FALSE)\n  return(dfmy)\n}\n\n#Function for counting distracted driving cases\n#INPUT: df = fatal_YY \n#OUTPUT: data frame of number of distracted driving cases involving cellphones by model year\ncountOfDisCasesByMY <- function(df) {\n  #df = fatal_YY\n  fataldisYY <- df[df$drf != 0, ]\n  #dfn is the new dataframe\n  dfn <- fataldisYY\n  modelyearList <- unique(dfn$modelyr)\n  modelYear = numeric()\n  modelYearCellPhone = numeric()\n  listcount <- 1\n  for(i in modelyearList){\n    modelYear[listcount] <- i\n    addingToTable <- function(i){\n      dfs <- dfn\n      dfs$modelyrP <- ifelse(dfn$modelyr == i, 1, 0)\n      dfs <- dfs[dfs$modelyrP != 0, ]\n      dft <- as.data.frame(cbind.data.frame(dfs$casenum, dfs$statenum), \n                           header = TRUE, as.is = TRUE)\n      colnames(dft) <- c(\"casenum\", \"statenum\")\n      dft <- unique(dft)\n      dft <- makingUniqueCases(dft)\n      casetotalsum <- 0\n      x <- count(dft)\n      casetotalsum <- sum(x$freq)\n      return(casetotalsum)\n    }\n    modelYearCellPhone[listcount] <- addingToTable(i)\n    listcount = listcount + 1\n  }\n  dfmy <- data.frame(modelYear,modelYearCellPhone, stringsAsFactors = FALSE)\n  return(dfmy)\n}\n\n# NHTSA TECHNOLOGY --------------------------------------------------------\n\n#Function for counting number of cases with fatalitites in the car\n#INPUT: df = fatal_YY\n#OUTPUT: number of cases with fatalities in the car by model year\ncountOfFatalInCarByMY <- function(df) {\n  #df = fatal_YY\n  #dfn is the new dataframe\n  dfn <- df[df$numfatalveh != 0,]\n  modelyearList <- unique(df$modelyr)\n  modelYear = numeric()\n  modelYearFatalVeh = numeric()\n  listcount <- 1\n  for(i in modelyearList){\n    modelYear[listcount] <- i\n    addingToTable <- function(i){\n      dfs <- dfn\n      dfs$modelyrP <- ifelse(dfn$modelyr == i, 1, 0)\n      dfs <- dfs[dfs$modelyrP != 0, ]\n      \n      dft <- as.data.frame(cbind.data.frame(dfs$casenum, dfs$statenum), \n                           header = TRUE, as.is = TRUE)\n      colnames(dft) <- c(\"casenum\", \"statenum\")\n      \n      dft <- makingUniqueCases(dft)\n      casetotalsum <- 0\n      x <- count(dft)\n      casetotalsum <- sum(x$freq)\n      return(casetotalsum)\n    }\n    modelYearFatalVeh[listcount] <- addingToTable(i)\n    listcount = listcount + 1\n  }\n  dfmy <- data.frame(modelYear,modelYearFatalVeh, stringsAsFactors = FALSE)\n  return(dfmy)\n}\n\n\n#Function for creating data frame FatalCases (FC) o.f. TotalCases (TC) with Distracted Cases o.f. TC\n#INPUT: none\n#OUTPUT: data frame with modelyr, numFatalVeh, numCellPhone, numTotalCases\nmakingNHTSAdf <- function(){\n  \n  #fatalities in vehicle cases combined data frame\n  combinedFatalVehdf <- function(){\n    df07 <- countOfFatalInCarByMY(fatal_07)\n    df08 <- countOfFatalInCarByMY(fatal_08)\n    df09 <- countOfFatalInCarByMY(fatal_09)\n    df10 <- countOfFatalInCarByMY(fatal_10)\n    df11 <- countOfFatalInCarByMY(fatal_11)\n    df12 <- countOfFatalInCarByMY(fatal_12)\n    df13 <- countOfFatalInCarByMY(fatal_13)\n    df14 <- countOfFatalInCarByMY(fatal_14)\n    df15 <- countOfFatalInCarByMY(fatal_15)\n    #combining into one df\n    combineddf <- rbind(df07,df08, df09, df10, df11, df12, df13, \n                        df14, df15)\n    return(combineddf)\n  }\n  numFatalVehdf <- combinedFatalVehdf()\n  modelyear <- sort(unique(numFatalVehdf$modelYear))\n  fatalVehTotal <- as.vector(tapply(numFatalVehdf$modelYearFatalVeh, numFatalVehdf$modelYear, sum))\n  casedf <- data.frame(list(modelYear = modelyear, fatalVehTotal = fatalVehTotal), stringsAsFactors = FALSE)\n  casedf$fatalVehTotal <- as.integer(casedf$fatalVehTotal)\n  \n  \n  #cell phone cases combined data frame\n  combinedCellPhonedf <- function(){\n    df07 <- countOfDisCasesByMY(fatal_07, 07)\n    df08 <- countOfDisCasesByMY(fatal_08, 08)\n    df09 <- countOfDisCasesByMY(fatal_09, 09)\n    df10 <- countOfDisCasesByMY(fatal_10, 10)\n    df11 <- countOfDisCasesByMY(fatal_11, 11)\n    df12 <- countOfDisCasesByMY(fatal_12, 12)\n    df13 <- countOfDisCasesByMY(fatal_13, 13)\n    df14 <- countOfDisCasesByMY(fatal_14, 14)\n    df15 <- countOfDisCasesByMY(fatal_15, 15)\n    #combining into one df\n    combineddf <- rbind(df07,df08, df09, df10, df11, df12, df13, \n                        df14, df15)\n    return(combineddf)\n  }\n  #adding cell phone data frame into main combined data frame\n  numCellPhonedf <- combinedCellPhonedf()\n  modelyear <- sort(unique(numCellPhonedf$modelYear))\n  cellPhoneTotal <- as.vector(tapply(numCellPhonedf$modelYearCellPhone, numCellPhonedf$modelYear, sum))\n  CPcasedf <- data.frame(list(modelYear = modelyear, cellPhoneTotal = cellPhoneTotal), stringsAsFactors = FALSE)\n  casedf$cellPhoneTotal <- as.integer(CPcasedf$cellPhoneTotal)\n  \n  #total cases combined data frame\n  combinedTotalCasesdf <- function(){\n    df07 <- countOfCasesByMY(fatal_07)\n    df08 <- countOfCasesByMY(fatal_08)\n    df09 <- countOfCasesByMY(fatal_09)\n    df10 <- countOfCasesByMY(fatal_10)\n    df11 <- countOfCasesByMY(fatal_11)\n    df12 <- countOfCasesByMY(fatal_12)\n    df13 <- countOfCasesByMY(fatal_13)\n    df14 <- countOfCasesByMY(fatal_14)\n    df15 <- countOfCasesByMY(fatal_15)\n    #combining into one df\n    combineddf <- rbind(df07,df08, df09, df10, df11, df12, df13, \n                        df14, df15)\n    return(combineddf)\n  }\n  #combining into main data frame\n  numTotalCasesdf <- combinedTotalCasesdf()\n  modelyear <- sort(unique(numTotalCasesdf$modelYear))\n  TotalCasesMY <- as.vector(tapply(numTotalCasesdf$totalCases, numTotalCasesdf$modelYear, sum))\n  TCcasedf <- data.frame(list(modelYear = modelyear, totalCases = TotalCasesMY), stringsAsFactors = FALSE)\n  casedf$totalCases <- as.integer(TCcasedf$totalCases)\n  \n  #fatal in vehicle divided by total cases (%)\n  FatalVehofTotalCases <- round(((casedf$fatalVehTotal/casedf$totalCases)*100),digits = 4)\n  casedf$FatalVehofTotalCases <- FatalVehofTotalCases\n  # cell phone divided by total cases (%)\n  CellPhoneofTotalCases <- round(((casedf$cellPhoneTotal/casedf$totalCases)*100), digits = 4)\n  casedf$CellPhoneofTotalCases <- CellPhoneofTotalCases\n  \n  techPhase <- c(\"ESC\", \"ESC\", \"ESC\",\"ESC\",\"EM\",\"EM\",\"EM\",\"EM\",\"EM\")\n  \n  ndf <- as.data.frame(cbind(casedf$modelYear, casedf$fatalVehTotal,casedf$cellPhoneTotal,\n                             casedf$totalCases,casedf$FatalVehofTotalCases,casedf$CellPhoneofTotalCases,\n                             techPhase), header = TRUE, as.is = TRUE, stringsAsFactors = FALSE)\n  colnames(ndf) <- c(\"modelYear\", \"fatalVehTotal\", \"cellPhoneTotal\", \"totalCases\",\n                     \"FatalVehofTotalCases\",\"CellPhoneofTotalCases\",\"techPhase\")\n  ndf$modelYear <- casedf$modelYear \n  ndf$fatalVehTotal <- casedf$fatalVehTotal\n  ndf$cellPhoneTotal <- casedf$cellPhoneTotal\n  ndf$totalCases <- casedf$totalCases\n  ndf$FatalVehofTotalCases <- casedf$FatalVehofTotalCases\n  ndf$CellPhoneofTotalCases <- casedf$CellPhoneofTotalCases\n  return(ndf)\n}\n\ncombinedMYdf <- makingNHTSAdf()\n\n#Table CSV combinedMYdf To Paste into .txt File to Paste into Word for Table\n#Function for making and saving combinedMYdf Table \n#INPUT: df = combinedMYdf\n#OUTPUT: saved .CSV file of table\ntableToCSV <- function(df) {\n  #df = combinedMYdf\n  row.names(df)<- NULL\n  colnames(df) <- c(\"modelYear\", \"fatalVehTotal\", \"cellPhoneTotal\", \"totalCases\",\n                    \"FatalVehofTotalCases\",\"CellPhoneofTotalCases\",\"techPhase\")\n  write.csv(df, file = \"combinedMY.csv\")\n}\ntableToCSV(combinedMYdf)\n\n#NHTSA PLOT MY\nNHTSAplot <- function() {\n  #df = combinedMYdf\n  mydata <- combinedMYdf\n  par(mfrow=c(2,1))\n  x = mydata$modelYear\n  xmin = min(mydata$modelYear)\n  xmax = max(mydata$modelYear)\n  \n  y1 = mydata$CellPhoneofTotalCases\n  ymin1 = min(mydata$CellPhoneofTotalCases) - 0.2\n  ymax1 = max(mydata$CellPhoneofTotalCases) + 0.1\n  \n  ymin2 = min(mydata$FatalVehofTotalCases)-0.5\n  ymax2 = max(mydata$FatalVehofTotalCases)+1\n  y2 = mydata$FatalVehofTotalCases\n  \n  plot(x,y2, main = \"Cases with Fatalities in Vehicle (%)\", xlab = \"Model Year\", ylab =\"Fatalities in Vehicle Cases(%)\", xlim = c(xmin, xmax),\n       ylim = c(ymin2, ymax2), col = \"mediumblue\")\n  lines(x, y2, type = \"h\", col = \"mediumblue\")\n  \n  plot(x,y1, main = \"Cases with Cell Phone Usage (%)\", xlab = \"Model Year\", ylab =\"Cell Phone Cases (%)\", xlim = c(xmin, xmax),\n       ylim = c(ymin1, ymax1), col = \"darkviolet\")\n  lines(x, y1, type = \"h\", col = \"darkviolet\")\n  \n}\nNHTSAplot()\n\n#TECHNOLOGY T-TEST\ntechnologyTtest <- function(df){\n  #df = combinedMYdf\n  before11 <- subset(df, modelYear < 2011, select = FatalVehofTotalCases)\n  \n  after11 <- subset(df, modelYear > 2011, select = FatalVehofTotalCases)\n  print(sd(before11$FatalVehofTotalCases))\n  print(sd(after11$FatalVehofTotalCases))\n  ttest <- t.test(before11,after11)\n  return(ttest)\n}\ntechnologyTtest(combinedMYdf)\n\n#CELL PHONE T-TEST\ncellphoneTtest <- function(df, MY){\n  #df = combinedMYdf\n  #MY = model year break. either 2010 or 2014\n  if(MY == 2010){\n    before10 <- subset(df, modelYear < 2010, select = CellPhoneofTotalCases)\n    \n    after10 <- subset(df, modelYear > 2010, select = CellPhoneofTotalCases)\n    print(sd(before10$CellPhoneofTotalCases))\n    print(sd(after10$CellPhoneofTotalCases))\n    ttest <- t.test(before10,after10)\n  } else {\n    before14 <- subset(df, modelYear < 2014, select = CellPhoneofTotalCases)\n    \n    after14 <- subset(df, modelYear > 2014, select = CellPhoneofTotalCases)\n    print(sd(before14$CellPhoneofTotalCases))\n    print(sd(after14$CellPhoneofTotalCases))\n    ttest <- t.test(before14,after14)\n  }\n  return(ttest)\n}\ncellphoneTtest(combinedMYdf,2010)\ncellphoneTtest(combinedMYdf,2014)\n\n\n# MAKES ANALYSIS -----------------------------------------------------------\n#MAKES: FARS CODE : MAKE NAME\n#   12 : Ford\n#   19 : Cadillac\n#   42 : Mercedes-Benz\n#   51 : Volvo\n#CREATING MAKES TABLE\ncreatingMakestable <- function(){\n  makesFARScode <- c(12,19,42,51)\n  makeNames <- c(\"Ford\", \"Cadillac\", \"Mercedes-Benz\", \"Volvo\")\n  makestable <- as.data.frame(cbind(as.numeric(makesFARScode), \n                                    as.character(makeNames)), \n                              stringAsFactors = FALSE)\n  colnames(makestable) <- c(\"FARScode\", \"makename\")\n  return(makestable)\n}\n\n#Count of Total Cases for each Make by Model Year\n#INPUT: df = fatal_YY makenum = Make number\n#OUTPUT: data frame with count of cases by model year\ncountOfCasesMakeByMY <- function(df, makenum) {\n  #df = fatal_YY\n  #makenum = make number\n  modelyearList <- unique(df$modelyr)\n  mn <- makenum\n  dfs <- df\n  dfs$makenump <- ifelse(dfs$make == mn, 1, 0)\n  dfs <- dfs[dfs$makenump != 0, ]\n  modelYear = numeric()\n  totalCases = numeric()\n  listcount <- 1\n  for(i in modelyearList){\n    modelYear[listcount] <- i\n    addingToTable <- function(i){\n      dfn <- dfs\n      dfn$modelyrP <- ifelse(dfn$modelyr == i, 1, 0)\n      dfn <- dfn[dfn$modelyrP != 0, ]\n      dft <- as.data.frame(cbind.data.frame(dfn$casenum, dfn$statenum), \n                           header = TRUE, as.is = TRUE)\n      colnames(dft) <- c(\"casenum\", \"statenum\")\n      dft <- unique(dft)\n      \n      casetotalsum <- 0\n      x <- count(dft)\n      casetotalsum <- sum(x$freq)\n      return(casetotalsum)\n    }\n    totalCases[listcount] <- addingToTable(i)\n    listcount = listcount + 1\n  }\n  dfmy <- data.frame(modelYear,totalCases, stringsAsFactors = FALSE)\n  return(dfmy)\n}\n\n#Count of Cases with CP for Each Make by Model Year\n#INPUT: df = fatal_YY makenum = Make number\n#OUTPUT: data frame with count of distracted driving cases by model year\ncountOfDisCasesMakeByMY <- function(df, makenum) {\n  #df = fatal_YY\n  \n  fataldisYY <- df[df$drf != 0, ]\n  #dfn is the new dataframe\n  dfn <- fataldisYY\n  modelyearList <- unique(df$modelyr)\n  mn <- makenum\n  dfn$makenump <- ifelse(dfn$make == mn, 1, 0)\n  dfn <- dfn[dfn$makenump != 0, ]\n  modelYear = numeric()\n  modelYearCellPhone = numeric()\n  listcount <- 1\n  for(i in modelyearList){\n    modelYear[listcount] <- i\n    addingToTable <- function(i){\n      dfs <- dfn\n      dfs$modelyrP <- ifelse(dfn$modelyr == i, 1, 0)\n      dfs <- dfs[dfs$modelyrP != 0, ]\n      dft <- as.data.frame(cbind.data.frame(dfs$casenum, dfs$statenum), \n                           header = TRUE, as.is = TRUE)\n      colnames(dft) <- c(\"casenum\", \"statenum\")\n      dft <- unique(dft)\n      \n      casetotalsum <- 0\n      x <- count(dft)\n      casetotalsum <- sum(x$freq)\n      return(casetotalsum)\n    }\n    modelYearCellPhone[listcount] <- addingToTable(i)\n    listcount = listcount + 1\n  }\n  dfmy <- data.frame(modelYear,modelYearCellPhone, stringsAsFactors = FALSE)\n  return(dfmy)\n}\n\n#Counting Fatalities in Vehicle cases by Make and MY\n#INPUT: df = fatal_YY makenum = Make number\n#OUTPUT: data frame with count of cases with fatalities in vehicles by model year \ncountingFatalMakeInCarsByMY <- function(df, makenum) {\n  #df = fatal_YY\n  mn <- makenum\n  modelyearList <- unique(df$modelyr)\n  df$makenump <- ifelse(df$make == mn, 1, 0)\n  df <- df[df$makenump != 0, ]\n  dfn <- df[df$numfatalveh != 0,]\n  \n  modelYear = numeric()\n  modelYearFatalVeh = numeric()\n  listcount <- 1\n  for(i in modelyearList){\n    modelYear[listcount] <- i\n    addingToTable <- function(i){\n      dfs <- dfn\n      dfs$modelyrP <- ifelse(dfn$modelyr == i, 1, 0)\n      dfs <- dfs[dfs$modelyrP != 0, ]\n      \n      dft <- as.data.frame(cbind.data.frame(dfs$casenum, dfs$statenum), \n                           header = TRUE, as.is = TRUE)\n      colnames(dft) <- c(\"casenum\", \"statenum\")\n      \n      dft <- unique(dft)\n      casetotalsum <- 0\n      x <- count(dft)\n      casetotalsum <- sum(x$freq)\n      return(casetotalsum)\n    }\n    modelYearFatalVeh[listcount] <- addingToTable(i)\n    listcount = listcount + 1\n  }\n  dfmy <- data.frame(modelYear,modelYearFatalVeh, stringsAsFactors = FALSE)\n  return(dfmy)\n}\n\n#Dataframe of Make\n#INPUT:makenum = Make number\n#OUTPUT: combined data frame of counts of cases by model number\nmakingMakedf <- function(makenum){\n  mn <- makenum\n  #fatalities in vehicle cases\n  combinedFatalVehdf <- function(){\n    df07 <- countingFatalMakeInCarsByMY(fatal_07, mn)\n    df08 <- countingFatalMakeInCarsByMY(fatal_08, mn)\n    df09 <- countingFatalMakeInCarsByMY(fatal_09, mn)\n    df10 <- countingFatalMakeInCarsByMY(fatal_10, mn)\n    df11 <- countingFatalMakeInCarsByMY(fatal_11, mn)\n    df12 <- countingFatalMakeInCarsByMY(fatal_12, mn)\n    df13 <- countingFatalMakeInCarsByMY(fatal_13, mn)\n    df14 <- countingFatalMakeInCarsByMY(fatal_14, mn)\n    df15 <- countingFatalMakeInCarsByMY(fatal_15, mn)\n    #combining into one df\n    combineddf <- rbind(df07,df08, df09, df10, df11, df12, df13, \n                        df14, df15)\n    return(combineddf)\n  }\n  numFatalVehdf <- combinedFatalVehdf()\n  modelyear <- sort(unique(numFatalVehdf$modelYear))\n  fatalVehTotal <- as.vector(tapply(numFatalVehdf$modelYearFatalVeh, numFatalVehdf$modelYear, sum))\n  casedf <- data.frame(list(modelYear = modelyear, fatalVehTotal = fatalVehTotal), stringsAsFactors = FALSE)\n  casedf$fatalVehTotal <- as.integer(casedf$fatalVehTotal)\n  \n  \n  \n  #cell phone cases\n  combinedCellPhonedf <- function(){\n    df07 <- countOfDisCasesMakeByMY(fatal_07, mn)\n    df08 <- countOfDisCasesMakeByMY(fatal_08, mn)\n    df09 <- countOfDisCasesMakeByMY(fatal_09, mn)\n    df10 <- countOfDisCasesMakeByMY(fatal_10, mn)\n    df11 <- countOfDisCasesMakeByMY(fatal_11, mn)\n    df12 <- countOfDisCasesMakeByMY(fatal_12, mn)\n    df13 <- countOfDisCasesMakeByMY(fatal_13, mn)\n    df14 <- countOfDisCasesMakeByMY(fatal_14, mn)\n    df15 <- countOfDisCasesMakeByMY(fatal_15, mn)\n    #combining into one df\n    combineddf <- rbind(df07,df08, df09, df10, df11, df12, df13, \n                        df14, df15)\n    return(combineddf)\n  }\n  numCellPhonedf <- combinedCellPhonedf()\n  modelyear <- sort(unique(numCellPhonedf$modelYear))\n  cellPhoneTotal <- as.vector(tapply(numCellPhonedf$modelYearCellPhone, numCellPhonedf$modelYear, sum))\n  CPcasedf <- data.frame(list(modelYear = modelyear, cellPhoneTotal = cellPhoneTotal), stringsAsFactors = FALSE)\n  casedf$cellPhoneTotal <- as.integer(CPcasedf$cellPhoneTotal)\n  \n  #total cases \n  combinedTotalCasesdf <- function(){\n    df07 <- countOfCasesMakeByMY(fatal_07, mn)\n    df08 <- countOfCasesMakeByMY(fatal_08, mn)\n    df09 <- countOfCasesMakeByMY(fatal_09, mn)\n    df10 <- countOfCasesMakeByMY(fatal_10, mn)\n    df11 <- countOfCasesMakeByMY(fatal_11, mn)\n    df12 <- countOfCasesMakeByMY(fatal_12, mn)\n    df13 <- countOfCasesMakeByMY(fatal_13, mn)\n    df14 <- countOfCasesMakeByMY(fatal_14, mn)\n    df15 <- countOfCasesMakeByMY(fatal_15, mn)\n    #combining into one df\n    combineddf <- rbind(df07,df08, df09, df10, df11, df12, df13, \n                        df14, df15)\n    return(combineddf)\n  }\n  numTotalCasesdf <- combinedTotalCasesdf()\n  modelyear <- sort(unique(numTotalCasesdf$modelYear))\n  TotalCasesMY <- as.vector(tapply(numTotalCasesdf$totalCases, numTotalCasesdf$modelYear, sum))\n  TCcasedf <- data.frame(list(modelYear = modelyear, totalCases = TotalCasesMY), stringsAsFactors = FALSE)\n  casedf$totalCases <- as.integer(TCcasedf$totalCases)\n  \n  #fatal in vehicle divided by total cases (%)\n  FatalVehofTotalCases <- round(((casedf$fatalVehTotal/casedf$totalCases)*100),digits = 4)\n  casedf$FatalVehofTotalCases <- FatalVehofTotalCases\n  # cell phone divided by total cases (%)\n  CellPhoneofTotalCases <- round(((casedf$cellPhoneTotal/casedf$totalCases)*100), digits = 4)\n  casedf$CellPhoneofTotalCases <- CellPhoneofTotalCases\n  \n  \n  ndf <- as.data.frame(cbind(casedf$modelYear, casedf$fatalVehTotal,casedf$cellPhoneTotal,\n                             casedf$totalCases,casedf$FatalVehofTotalCases,casedf$CellPhoneofTotalCases), \n                       header = TRUE, as.is = TRUE, stringsAsFactors = FALSE)\n  colnames(ndf) <- c(\"modelYear\", \"fatalVehTotal\", \"cellPhoneTotal\", \"totalCases\",\n                     \"FatalVehofTotalCases\",\"CellPhoneofTotalCases\")\n  ndf$modelYear <- casedf$modelYear \n  ndf$fatalVehTotal <- casedf$fatalVehTotal\n  ndf$cellPhoneTotal <- casedf$cellPhoneTotal\n  ndf$totalCases <- casedf$totalCases\n  ndf$FatalVehofTotalCases <- casedf$FatalVehofTotalCases\n  ndf$CellPhoneofTotalCases <- casedf$CellPhoneofTotalCases\n  return(ndf)\n}\n\n#for Ford (FARS Code 12)\nfordMakedf <- makingMakedf(12)\n\n#for Cadillac (FARS Code 19)\ncadillacMakedf <- makingMakedf(19)\ncadillacMakedf[is.na(cadillacMakedf)] <- 0\n\n#for Mercedes-Benz (FARS Code 42)\nmercedesMakedf <- makingMakedf(42)\n\n#for Volvo (FARS Code 51)\nvolvoMakedf <- makingMakedf(51)\nvolvoMakedf[is.na(volvoMakedf)] <- 0\n\n#Table CSV makeCPdf To Paste into .txt File to Paste into Word for Table\n#Function for making and saving makedisdf Table \n#INPUT: df = makeCPdf\n#OUTPUT: saved .CSV file of table\ntableToMakeCSV <- function(df) {\n  #df = makeMakedf\n  row.names(df)<- NULL\n  colnames(df) <- c(\"modelYear\", \"fatalVehTotal\", \"cellPhoneTotal\", \"totalCases\",\n                    \"FatalVehofTotalCases\",\"CellPhoneofTotalCases\")\n  write.csv(df, file = \"makevolvo.csv\")\n}\ntableToMakeCSV(volvoMakedf)\n\n\n#FORD\nFordplot <- function() {\n  mydata <- fordMakedf\n  par(mfrow=c(2,1))\n  x = mydata$modelYear\n  xmin = min(mydata$modelYear)\n  xmax = max(mydata$modelYear)\n  \n  y1 = mydata$CellPhoneofTotalCases\n  ymin1 = min(mydata$CellPhoneofTotalCases) \n  ymax1 = max(mydata$CellPhoneofTotalCases) + 0.2\n  \n  ymin2 = min(mydata$FatalVehofTotalCases)-1\n  ymax2 = max(mydata$FatalVehofTotalCases)+1.5\n  y2 = mydata$FatalVehofTotalCases\n  \n  plot(x,y2, main = \"Ford Cases with Fatalities in Vehicle (%)\", xlab = \"Model Year\", ylab =\"Fatalities in Vehicle Cases(%)\", xlim = c(xmin, xmax),\n       ylim = c(ymin2, ymax2), col = \"mediumblue\")\n  lines(x, y2, type = \"h\", col = \"mediumblue\")\n  \n  plot(x,y1, main = \"Ford Cases with Cell Phone Usage (%)\", xlab = \"Model Year\", ylab =\"Cell Phone Cases (%)\", xlim = c(xmin, xmax),\n       ylim = c(ymin1, ymax1), col = \"darkviolet\")\n  lines(x, y1, type = \"h\", col = \"darkviolet\")\n  \n}\nFordplot()\n\n#TECHNOLOGY T-TEST\nFordFatalVehTtest <- function(df){\n  #df = fordMakedf\n  before11 <- subset(df, modelYear < 2011, select = FatalVehofTotalCases)\n  \n  after11 <- subset(df, modelYear > 2011, select = FatalVehofTotalCases)\n  print(sd(before11$FatalVehofTotalCases))\n  print(sd(after11$FatalVehofTotalCases))\n  ttest <- t.test(before11,after11)\n  return(ttest)\n}\nFordFatalVehTtest(fordMakedf)\n\n#FORD CELL PHONE T-TEST\nFordCellPhoneTtest <- function(df, MY){\n  #df = fordMakedf\n  #MY = model year break. either 2010 or 2013\n  if(MY == 2010){\n    before10 <- subset(df, modelYear < 2010, select = CellPhoneofTotalCases)\n    \n    after10 <- subset(df, modelYear > 2010, select = CellPhoneofTotalCases)\n    print(sd(before10$CellPhoneofTotalCases))\n    print(sd(after10$CellPhoneofTotalCases))\n    ttest <- t.test(before10,after10)\n  } else {\n    before13 <- subset(df, modelYear < 2013, select = CellPhoneofTotalCases)\n    after13 <- subset(df, modelYear > 2013, select = CellPhoneofTotalCases)\n    print(sd(before13$CellPhoneofTotalCases))\n    print(sd(after13$CellPhoneofTotalCases))\n    ttest <- t.test(before13,after13)\n    \n  }\n  return(ttest)\n}\nFordCellPhoneTtest(fordMakedf, 2010)\nFordCellPhoneTtest(fordMakedf, 2013)\n\n#CADILLAC\nCadillacplot <- function() {\n  mydata <- cadillacMakedf\n  par(mfrow=c(2,1))\n  x = mydata$modelYear\n  xmin = min(mydata$modelYear)\n  xmax = max(mydata$modelYear)\n  \n  y1 = mydata$CellPhoneofTotalCases\n  ymin1 = min(mydata$CellPhoneofTotalCases) - 0.1\n  ymax1 = max(mydata$CellPhoneofTotalCases) + 0.2\n  \n  ymin2 = min(mydata$FatalVehofTotalCases)-0.1\n  ymax2 = max(mydata$FatalVehofTotalCases)+1\n  y2 = mydata$FatalVehofTotalCases\n  \n  plot(x,y2, main = \"Cadillac Cases with Fatalities in Vehicle (%)\", xlab = \"Model Year\", ylab =\"Fatalities in Vehicle Cases(%)\", xlim = c(xmin, xmax),\n       ylim = c(ymin2, ymax2), col = \"mediumblue\")\n  lines(x, y2, type = \"h\", col = \"mediumblue\")\n  \n  plot(x,y1, main = \"Cadillac Cases with Cell Phone Usage (%)\", xlab = \"Model Year\", ylab =\"Cell Phone Cases (%)\", xlim = c(xmin, xmax),\n       ylim = c(ymin1, ymax1), col = \"darkviolet\")\n  lines(x, y1, type = \"h\", col = \"darkviolet\")\n  \n}\nCadillacplot()\n\n#TECHNOLOGY T-TEST\nCadillacFatalVehTtest <- function(df, MY){\n  #df = cadillacMakedf\n  if(MY == 2011){\n    before11 <- subset(df, modelYear < 2011, select = FatalVehofTotalCases)\n    after11 <- subset(df, modelYear > 2011, select = FatalVehofTotalCases)\n    print(sd(before11$FatalVehofTotalCases))\n    print(sd(after11$FatalVehofTotalCases))\n    ttest <- t.test(before11,after11)\n  } else {\n    if(MY == 2012) {\n      before12 <- subset(df, modelYear < 2012, select = FatalVehofTotalCases)\n      after12 <- subset(df, modelYear > 2012, select = FatalVehofTotalCases)\n      print(sd(before12$FatalVehofTotalCases))\n      print(sd(after12$FatalVehofTotalCases))\n      ttest <- t.test(before12,after12)\n    } else {\n      before13 <- subset(df, modelYear < 2013, select = FatalVehofTotalCases)\n      after13 <- subset(df, modelYear > 2013, select = FatalVehofTotalCases)\n      print(sd(before13$FatalVehofTotalCases))\n      print(sd(after13$FatalVehofTotalCases))\n      ttest <- t.test(before13,after13)\n    }\n  }\n  return(ttest)\n}\nCadillacFatalVehTtest(cadillacMakedf, 2011)\nCadillacFatalVehTtest(cadillacMakedf, 2012)\nCadillacFatalVehTtest(cadillacMakedf, 2013)\n\n#CADILLAC CELL PHONE T-TEST\nCadillacCellPhoneTtest <- function(df, MY){\n  #df = cadillacMakedf\n  #MY = model year, either 2011 or 2013\n  if(MY == 2011){\n    before11 <- subset(df, modelYear < 2011, select = CellPhoneofTotalCases)\n    after11 <- subset(df, modelYear > 2011, select = CellPhoneofTotalCases)\n    print(sd(before11$CellPhoneofTotalCases))\n    print(sd(after11$CellPhoneofTotalCases))\n    ttest <- t.test(before11,after11)\n  } else {\n    before13 <- subset(df, modelYear < 2013, select = CellPhoneofTotalCases)\n    after13 <- subset(df, modelYear > 2013, select = CellPhoneofTotalCases)\n    print(sd(before13$CellPhoneofTotalCases))\n    print(sd(after13$CellPhoneofTotalCases))\n    ttest <- t.test(before13,after13)\n  }\n  \n  return(ttest)\n}\nCadillacCellPhoneTtest(cadillacMakedf, 2011)\nCadillacCellPhoneTtest(cadillacMakedf, 2013)\n\n\n#MERCEDES\nMercedesplot <- function() {\n  mydata <- mercedesMakedf\n  par(mfrow=c(2,1))\n  x = mydata$modelYear\n  xmin = min(mydata$modelYear)\n  xmax = max(mydata$modelYear)\n  \n  y1 = mydata$CellPhoneofTotalCases\n  ymin1 = min(mydata$CellPhoneofTotalCases) - 0.1\n  ymax1 = max(mydata$CellPhoneofTotalCases) + 0.2\n  \n  ymin2 = min(mydata$FatalVehofTotalCases)-0.1\n  ymax2 = max(mydata$FatalVehofTotalCases)+1\n  y2 = mydata$FatalVehofTotalCases\n  \n  plot(x,y2, main = \"Mercedes Cases with Fatalities in Vehicle (%)\", xlab = \"Model Year\", ylab =\"Fatalities in Vehicle Cases(%)\", xlim = c(xmin, xmax),\n       ylim = c(ymin2, ymax2), col = \"mediumblue\")\n  lines(x, y2, type = \"h\", col = \"mediumblue\")\n  \n  plot(x,y1, main = \"Mercedes Cases with Cell Phone Usage (%)\", xlab = \"Model Year\", ylab =\"Cell Phone Cases (%)\", xlim = c(xmin, xmax),\n       ylim = c(ymin1, ymax1), col = \"darkviolet\")\n  lines(x, y1, type = \"h\", col = \"darkviolet\")\n  \n}\nMercedesplot()\n\n#TECHNOLOGY T-TEST\nMercedesFatalVehTtest <- function(df, MY){\n  #df = mercedesMakedf\n  #MY = model year, either 2010 or 2013\n  if(MY == 2010){\n    before10 <- subset(df, modelYear < 2010, select = FatalVehofTotalCases)\n    after10 <- subset(df, modelYear > 2010, select = FatalVehofTotalCases)\n    print(sd(before10$FatalVehofTotalCases))\n    print(sd(after10$FatalVehofTotalCases))\n    ttest <- t.test(before10,after10)\n  } else {\n    before13 <- subset(df, modelYear < 2013, select = FatalVehofTotalCases)\n    \n    after13 <- subset(df, modelYear > 2013, select = FatalVehofTotalCases)\n    print(sd(before13$FatalVehofTotalCases))\n    print(sd(after13$FatalVehofTotalCases))\n    ttest <- t.test(before13,after13)\n  }\n  \n  return(ttest)\n}\nMercedesFatalVehTtest(mercedesMakedf, 2010)\nMercedesFatalVehTtest(mercedesMakedf, 2013)\n\n#MERCEDES CELL PHONE T-TEST\nMercedesCellPhoneTtest <- function(df, MY){\n  #df = mercedesMakedf\n  if(MY == 2010){\n    before10 <- subset(df, modelYear < 2010, select = CellPhoneofTotalCases)\n    after10 <- subset(df, modelYear > 2010, select = CellPhoneofTotalCases)\n    print(sd(before10$CellPhoneofTotalCases))\n    print(sd(after10$CellPhoneofTotalCases))\n    ttest <- t.test(before10,after10)\n  } else {\n    before14 <- subset(df, modelYear < 2014, select = CellPhoneofTotalCases)\n    after14 <- subset(df, modelYear > 2014, select = CellPhoneofTotalCases)\n    print(sd(before14$CellPhoneofTotalCases))\n    print(sd(after14$CellPhoneofTotalCases))\n    ttest <- t.test(before14,after14)\n  }\n  \n  return(ttest)\n}\nMercedesCellPhoneTtest(mercedesMakedf, 2010)\nMercedesCellPhoneTtest(mercedesMakedf, 2014)\n\n#VOLVO\nVolvoplot <- function() {\n  mydata <- volvoMakedf\n  par(mfrow=c(2,1))\n  x = mydata$modelYear\n  xmin = min(mydata$modelYear)\n  xmax = max(mydata$modelYear)\n  \n  y1 = mydata$CellPhoneofTotalCases\n  ymin1 = min(mydata$CellPhoneofTotalCases) - 0.1\n  ymax1 = max(mydata$CellPhoneofTotalCases) + 0.2\n  \n  ymin2 = min(mydata$FatalVehofTotalCases)-0.1\n  ymax2 = max(mydata$FatalVehofTotalCases)+1\n  y2 = mydata$FatalVehofTotalCases\n  \n  plot(x,y2, main = \"Volvo Cases with Fatalities in Vehicle (%)\", xlab = \"Model Year\", ylab =\"Fatalities in Vehicle Cases(%)\", xlim = c(xmin, xmax),\n       ylim = c(ymin2, ymax2), col = \"mediumblue\")\n  lines(x, y2, type = \"h\", col = \"mediumblue\")\n  \n  plot(x,y1, main = \"Volvo Cases with Cell Phone Usage (%)\", xlab = \"Model Year\", ylab =\"Cell Phone Cases (%)\", xlim = c(xmin, xmax),\n       ylim = c(ymin1, ymax1), col = \"darkviolet\")\n  lines(x, y1, type = \"h\", col = \"darkviolet\")\n  \n}\nVolvoplot()\n\n#TECHNOLOGY T-TEST\nVolvoFatalVehTtest <- function(df, MY){\n  #df = volvoMakedf\n  if(MY == 2010) {\n    before10 <- subset(df, modelYear < 2010, select = FatalVehofTotalCases)\n    after10 <- subset(df, modelYear > 2010, select = FatalVehofTotalCases)\n    print(sd(before10$FatalVehofTotalCases))\n    print(sd(after10$FatalVehofTotalCases))\n    ttest <- t.test(before10,after10)\n  } else {\n    before12 <- subset(df, modelYear < 2012, select = FatalVehofTotalCases)\n    after12 <- subset(df, modelYear > 2012, select = FatalVehofTotalCases)\n    print(sd(before12$FatalVehofTotalCases))\n    print(sd(after12$FatalVehofTotalCases))\n    ttest <- t.test(before12,after12)\n  }\n  \n  return(ttest)\n}\nVolvoFatalVehTtest(volvoMakedf, 2010)\nVolvoFatalVehTtest(volvoMakedf, 2012)",
    "created" : 1541451450731.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "128|28|152|40|\n",
    "hash" : "987317814",
    "id" : "B0518A8F",
    "lastKnownWriteTime" : 1524501394,
    "last_content_update" : 1541453171922,
    "path" : "~/Desktop/HON400Thesis/code.R",
    "project_path" : "code.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}